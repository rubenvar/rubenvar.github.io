{"version":3,"sources":["scripts.js"],"names":["userInput","document","getElementById","button","result","reset","regex","calculateHSL","inp","test","console","error","hex","r","g","b","replace","length","log","min","h","Math","max","delta","round","l","s","abs","toFixed","addEventListener","value","split","map","filter","join"],"mappings":";AACA,IAAMA,EAAYC,SAASC,eAAe,OACpCC,EAASF,SAASC,eAAe,WACjCE,EAASH,SAASC,eAAe,UACjCG,EAAQJ,SAASC,eAAe,SAEhCI,EAAQ,4CAEd,SAASC,EAAaC,GAGhB,IADUF,EAAMG,KAAKD,GACb,OAAOE,QAAQC,MAASH,GAAAA,OAAAA,EAAxB,4BAENI,IAEFC,EACAC,EACAC,EAJEH,EAAMJ,EAAIQ,QAAQ,IAAK,IAMzBJ,GAAe,IAAfA,EAAIK,OACNJ,GAAUD,KAAAA,OAAAA,EAAI,IAAKA,OAAAA,EAAI,IACvBE,GAAUF,KAAAA,OAAAA,EAAI,IAAKA,OAAAA,EAAI,IACvBG,GAAUH,KAAAA,OAAAA,EAAI,IAAKA,OAAAA,EAAI,QAClB,CAAA,GAAmB,IAAfA,EAAIK,OAIR,OAAOP,QAAQQ,IAAOV,GAAAA,OAAAA,EAAtB,4BAHLK,GAAUD,KAAAA,OAAAA,EAAI,IAAKA,OAAAA,EAAI,IACvBE,GAAUF,KAAAA,OAAAA,EAAI,IAAKA,OAAAA,EAAI,IACvBG,GAAUH,KAAAA,OAAAA,EAAI,IAAKA,OAAAA,EAAI,IAIzBC,GAAK,IACLC,GAAK,IACLC,GAAK,IAECI,IAIFC,EAJED,EAAME,KAAKF,IAAIN,EAAGC,EAAGC,GACrBO,EAAMD,KAAKC,IAAIT,EAAGC,EAAGC,GACrBQ,EAAQD,EAAMH,EAIN,IAAVI,EAAaH,EAAI,EAEZE,IAAQT,EAAGO,GAAMN,EAAIC,GAAKQ,EAAS,EACnCD,IAAQR,EAAGM,GAAKL,EAAIF,GAAKU,EAAQ,EACjCD,IAAQP,IAAGK,GAAKP,EAAIC,GAAKS,EAAQ,IAE1CH,EAAIC,KAAKG,MAAU,GAAJJ,IAEP,IAAGA,GAAK,KAEZK,IAAAA,GAAKH,EAAMH,GAAO,EAElBO,EAAc,IAAVH,EAAc,EAAIA,GAAS,EAAIF,KAAKM,IAAI,EAAIF,EAAI,IAK1CL,OAHdK,IAAU,IAAJA,GAASG,QAAQ,GACvBF,IAAU,IAAJA,GAASE,QAAQ,GAETR,OAAAA,OAAAA,EAAMM,MAAAA,OAAAA,EAAOD,OAAAA,OAAAA,EAA3B,MAGFtB,EAAO0B,iBACL,QACA,WACE,OACCzB,EAAO0B,MAAQ9B,EAAU8B,MAEvBC,MAAM,KACNC,IAAI,SAAAZ,GAAKA,OAAAA,EAAEJ,QAAQ,KAAM,MACzBgB,IAAI,SAAAZ,GAAKA,OAAAA,EAAEJ,QAAQ,MAAO,MAC1BiB,OAAO,SAAAb,GAAKA,MAAM,KAANA,IAEZY,IAAI,SAAAZ,GAAKb,OAAAA,EAAaa,KAEtBc,KAAK,QAGZ7B,EAAMwB,iBAAiB,QAAS,WAC9B7B,EAAU8B,MAAQ,GAClB1B,EAAO0B,MAAQ","file":"scripts.530c2b31.js","sourceRoot":"../src","sourcesContent":["// formulas from https://css-tricks.com/converting-color-spaces-in-javascript/\nconst userInput = document.getElementById('hex');\nconst button = document.getElementById('convert');\nconst result = document.getElementById('result');\nconst reset = document.getElementById('reset');\n\nconst regex = /^(#)?[a-fA-F0-9]{3}$|^(#)?[a-fA-F0-9]{6}$/;\n\nfunction calculateHSL(inp) {\n  // first check hex format is right, else return\n  const isHex = regex.test(inp);\n  if (!isHex) return console.error(`${inp} not valid (‚ïØ¬∞‚ñ°¬∞Ôºâ‚ïØÔ∏µ ‚îª‚îÅ‚îª`);\n  // strip the #\n  const hex = inp.replace('#', '');\n  // hex to rgb (add '0x' in front and convert to Int to get decimal from haxdecimals üòâ)\n  let r;\n  let g;\n  let b;\n  // check if hex is 3 or 6 length\n  if (hex.length === 6) {\n    r = +`0x${hex[0]}${hex[1]}`;\n    g = +`0x${hex[2]}${hex[3]}`;\n    b = +`0x${hex[4]}${hex[5]}`;\n  } else if (hex.length === 3) {\n    r = +`0x${hex[0]}${hex[0]}`;\n    g = +`0x${hex[1]}${hex[1]}`;\n    b = +`0x${hex[2]}${hex[2]}`;\n  } else return console.log(`${inp} not valid (‚ïØ¬∞‚ñ°¬∞Ôºâ‚ïØÔ∏µ ‚îª‚îÅ‚îª`);\n  // convert rgb to hsl:\n  // 1. divide by 255\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  // 2. get max, min, and difference between max and min\n  const min = Math.min(r, g, b);\n  const max = Math.max(r, g, b);\n  const delta = max - min;\n  // 3. calculate Hue\n  let h;\n  // no difference between channels\n  if (delta === 0) h = 0;\n  // formulas for each channel\n  else if (max === r) h = ((g - b) / delta) % 6;\n  else if (max === g) h = (b - r) / delta + 2;\n  else if (max === b) h = (r - g) / delta + 4;\n  // get degrees\n  h = Math.round(h * 60);\n  // only positives under 360\n  if (h < 0) h += 360;\n  // calculate Lightness\n  let l = (max + min) / 2;\n  // calculate Saturation\n  let s = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n  // L and S to hundreds (for percent)\n  l = +(l * 100).toFixed(0);\n  s = +(s * 100).toFixed(0);\n  // out hsl formatted for css\n  return `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nbutton.addEventListener(\n  'click',\n  () =>\n    // asasa\n    (result.value = userInput.value\n      // strip commas, spaces, newlines, empty, etc.\n      .split(',')\n      .map(h => h.replace(/ /g, ''))\n      .map(h => h.replace(/\\n/g, ''))\n      .filter(h => h !== '')\n      // get hsl\n      .map(h => calculateHSL(h))\n      // into string with newlines\n      .join('\\n'))\n);\n\nreset.addEventListener('click', () => {\n  userInput.value = '';\n  result.value = '';\n});\n"]}