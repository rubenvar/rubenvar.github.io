{"mappings":"gBACMA,EAAYC,SAASC,eAAe,OACpCC,EAASF,SAASC,eAAe,WACjCE,EAASH,SAASC,eAAe,UACjCG,EAAQJ,SAASC,eAAe,SAEhCI,EAAQ,4CAsDdH,EAAOI,iBACL,SACA,kBAEGH,EAAOI,MAAQR,EAAUQ,MAEvBC,MAAM,KACNC,KAAI,SAAAC,UAAKA,EAAEC,QAAQ,KAAM,OACzBF,KAAI,SAAAC,UAAKA,EAAEC,QAAQ,MAAO,OAC1BC,QAAO,SAAAF,SAAW,KAANA,KAEZD,KAAI,SAAAC,UA/DX,SAAsBG,OAENR,EAAMS,KAAKD,GACpBE,OAAcC,QAAQC,MAAAA,GAAAA,OAASJ,EAAAA,gCAIhCK,EACAC,EACAC,EAJEC,EAAMR,EAAIF,QAAQ,IAAK,OAMV,IAAfU,EAAIC,OACNJ,GAAAA,KAAAA,OAAUG,EAAI,IAAAE,OAAKF,EAAI,IACvBF,GAAAA,KAAAA,OAAUE,EAAI,IAAAE,OAAKF,EAAI,IACvBD,GAAAA,KAAAA,OAAUC,EAAI,IAAAE,OAAKF,EAAI,YACC,IAAfA,EAAIC,cAIDN,QAAQQ,IAAAA,GAAAA,OAAOX,EAAAA,4BAH3BK,GAAAA,KAAAA,OAAUG,EAAI,IAAAE,OAAKF,EAAI,IACvBF,GAAAA,KAAAA,OAAUE,EAAI,IAAAE,OAAKF,EAAI,IACvBD,GAAAA,KAAAA,OAAUC,EAAI,IAAAE,OAAKF,EAAI,IAIzBH,GAAK,IACLC,GAAK,IACLC,GAAK,QAMDV,EAJEe,EAAMC,KAAKD,IAAIP,EAAGC,EAAGC,GACrBO,EAAMD,KAAKC,IAAIT,EAAGC,EAAGC,GACrBQ,EAAQD,EAAMF,EAIN,IAAVG,EAAalB,EAAI,EAEZiB,IAAQT,EAAGR,GAAMS,EAAIC,GAAKQ,EAAS,EACnCD,IAAQR,EAAGT,GAAKU,EAAIF,GAAKU,EAAQ,EACjCD,IAAQP,IAAGV,GAAKQ,EAAIC,GAAKS,EAAQ,IAE1ClB,EAAIgB,KAAKG,MAAU,GAAJnB,IAEP,IAAGA,GAAK,SAEZoB,GAAKH,EAAMF,GAAO,EAElBM,EAAc,IAAVH,EAAc,EAAIA,GAAS,EAAIF,KAAKM,IAAI,EAAIF,EAAI,WAExDA,IAAU,IAAJA,GAASG,QAAQ,GACvBF,IAAU,IAAJA,GAASE,QAAQ,iBAETvB,EAAAA,MAAAA,OAAMqB,EAAAA,OAAAA,OAAOD,EAAAA,MAcbI,CAAaxB,MAEtByB,KAAK,SAGZ/B,EAAME,iBAAiB,SAAS,WAC9BP,EAAUQ,MAAQ,GAClBJ,EAAOI,MAAQ","sources":["./src/scripts.js"],"sourcesContent":["// formulas from https://css-tricks.com/converting-color-spaces-in-javascript/\nconst userInput = document.getElementById('hex');\nconst button = document.getElementById('convert');\nconst result = document.getElementById('result');\nconst reset = document.getElementById('reset');\n\nconst regex = /^(#)?[a-fA-F0-9]{3}$|^(#)?[a-fA-F0-9]{6}$/;\n\nfunction calculateHSL(inp) {\n  // first check hex format is right, else return\n  const isHex = regex.test(inp);\n  if (!isHex) return console.error(`${inp} not valid (‚ïØ¬∞‚ñ°¬∞Ôºâ‚ïØÔ∏µ ‚îª‚îÅ‚îª`);\n  // strip the #\n  const hex = inp.replace('#', '');\n  // hex to rgb (add '0x' in front and convert to Int to get decimal from haxdecimals üòâ)\n  let r;\n  let g;\n  let b;\n  // check if hex is 3 or 6 length\n  if (hex.length === 6) {\n    r = +`0x${hex[0]}${hex[1]}`;\n    g = +`0x${hex[2]}${hex[3]}`;\n    b = +`0x${hex[4]}${hex[5]}`;\n  } else if (hex.length === 3) {\n    r = +`0x${hex[0]}${hex[0]}`;\n    g = +`0x${hex[1]}${hex[1]}`;\n    b = +`0x${hex[2]}${hex[2]}`;\n  } else return console.log(`${inp} not valid (‚ïØ¬∞‚ñ°¬∞Ôºâ‚ïØÔ∏µ ‚îª‚îÅ‚îª`);\n  // convert rgb to hsl:\n  // 1. divide by 255\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  // 2. get max, min, and difference between max and min\n  const min = Math.min(r, g, b);\n  const max = Math.max(r, g, b);\n  const delta = max - min;\n  // 3. calculate Hue\n  let h;\n  // no difference between channels\n  if (delta === 0) h = 0;\n  // formulas for each channel\n  else if (max === r) h = ((g - b) / delta) % 6;\n  else if (max === g) h = (b - r) / delta + 2;\n  else if (max === b) h = (r - g) / delta + 4;\n  // get degrees\n  h = Math.round(h * 60);\n  // only positives under 360\n  if (h < 0) h += 360;\n  // calculate Lightness\n  let l = (max + min) / 2;\n  // calculate Saturation\n  let s = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n  // L and S to hundreds (for percent)\n  l = +(l * 100).toFixed(0);\n  s = +(s * 100).toFixed(0);\n  // out hsl formatted for css\n  return `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nbutton.addEventListener(\n  'click',\n  () =>\n    // asasa\n    (result.value = userInput.value\n      // strip commas, spaces, newlines, empty, etc.\n      .split(',')\n      .map(h => h.replace(/ /g, ''))\n      .map(h => h.replace(/\\n/g, ''))\n      .filter(h => h !== '')\n      // get hsl\n      .map(h => calculateHSL(h))\n      // into string with newlines\n      .join('\\n'))\n);\n\nreset.addEventListener('click', () => {\n  userInput.value = '';\n  result.value = '';\n});\n"],"names":["$fca4645c7fb85ea554443c0fcbf9be9a$var$userInput","document","getElementById","$fca4645c7fb85ea554443c0fcbf9be9a$var$button","$fca4645c7fb85ea554443c0fcbf9be9a$var$result","$fca4645c7fb85ea554443c0fcbf9be9a$var$reset","$fca4645c7fb85ea554443c0fcbf9be9a$var$regex","addEventListener","value","split","map","h","replace","filter","inp","test","isHex","console","error","r","g","b","hex","length","concat","log","min","Math","max","delta","round","l","s","abs","toFixed","$fca4645c7fb85ea554443c0fcbf9be9a$var$calculateHSL","join"],"version":3,"file":"index.4c56ac72.js.map"}